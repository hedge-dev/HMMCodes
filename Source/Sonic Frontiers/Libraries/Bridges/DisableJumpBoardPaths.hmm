Library "Bridge.DisableJumpBoardPaths" by "Hyper"
{
    #include "BlackboardStatus" noemit

    #lib "Memory"

    private static bool _isInitialised = false;
    private static bool _isCyberSpace = false;

    public static bool IsDisabledOnIslands = false;
    public static bool IsDisabledInCyberSpace = false;

    [LibraryInitializer]
    public void Init()
    {
        if (_isInitialised)
            return;

        /* 0x140EC6CB0 */
        long sigSendMessage = Memory.ReadCall
        (
            /* v1.41: 0x14926F0E3 */
            ScanSignature
            (
                "\xE8\xCC\xCC\xCC\xCC\x80\x7D\xE5\x00\x0F\x84\xDB\x00\x00\x00\xE8\xCC\xCC\xCC\xCC\x48\x89\xC2",
                "x????xxxxxxxxxxx????xxx"
            )
        );

        fixed (bool* p_isCyberSpace = &_isCyberSpace)
        fixed (bool* pIsDisabledOnIslands = &IsDisabledOnIslands)
        fixed (bool* pIsDisabledInCyberSpace = &IsDisabledInCyberSpace)
        {
            /* This hook checks if we're on an island and calls
               the message sender to enter Sonic into the jump
               board path if we're in Cyber Space. */
            WriteAsmHook
            (
                $@"
                    mov  rbx, {(long)p_isCyberSpace}
                    cmp  byte ptr [rbx], 0
                    jnz  isCyberSpace
                    mov  rbx, {(long)pIsDisabledOnIslands}
                    cmp  byte ptr [rbx], 0
                    jnz  exit
                sendMessage:
                    lea  r8, qword ptr [rbp + 0x57 + 0xFFFFFFFFFFFFFF40]
                    lea  rdx, qword ptr [rbp + 0x57 + 0x10]
                    mov  ecx, [rax]
                    mov  dword ptr [rbp + 0x57 + 0x10], ecx
                    mov  rcx, rsi
                    mov  r9, {sigSendMessage}
                    call r9
                    jmp  exit
                isCyberSpace:
                    mov  rbx, {(long)pIsDisabledInCyberSpace}
                    cmp  byte ptr [rbx], 0
                    jz   sendMessage
                exit:
                ",

                /* 0x14964DF16 */
                ScanSignature
                (
                    "\x48\x8D\x55\x67\x8B\x08\x89\x4D\x67\x48\x89\xF1",
                    "xxxxxxxxxxxx"
                ),

                HookBehavior.Replace
            );
        }

        _isInitialised = true;
    }

    [LibraryUpdate]
    public void Update()
    {
        _isCyberSpace = IS_WORLD_FLAG(IsCyberSpace);
    }
}