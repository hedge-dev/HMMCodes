Library "BlackboardStatus" by "Hyper"
{
    #lib "Bitwise"
    #lib "Blackboard"
    #lib "GameDocument"
    #lib "GameObject"

    #define IS_STATE_FLAG(name) (BlackboardStatus.Get() != 0 && (*BlackboardStatus.GetStateFlags() & (1L << (int)BlackboardStatus.StateFlags.name)) != 0)
    #define IS_WORLD_FLAG(name) (BlackboardStatus.Get() != 0 && (*BlackboardStatus.GetWorldFlags() & (1L << (int)BlackboardStatus.WorldFlags.name)) != 0)

    public enum StateFlags
    {
        IsBoost = 0x00,
        IsRecoveryJump = 0x02,
        IsAirBoost = 0x04,
        IsGrindJump = 0x06,
        IsGrind = 0x07,
        IsJump = 0x08,
        IsDoubleJump = 0x09,
        IsBounceJump = 0x0A,
        IsFall = 0x0B,
        IsStomp = 0x0C,
        IsDiving = 0x0D,
        IsDivingBoost = 0x0E,
        IsCyloop = 0x11,
        IsCyloopEnd = 0x12,
        IsDrift = 0x13,
        IsDriftDash = 0x14,
        IsHoming = 0x17,
        IsParry = 0x18,
        IsWallClimb = 0x19,
        IsIdle = 0x1A,
        IsBoarding = 0x1E,
        IsSpringJump = 0x21,
        IsPhantomRush = 0x26
    }

    public enum WorldFlags
    {
        IsAutoRun = 0x0A,
        IsCyberSpace = 0x1D,
        IsPowerBoost = 0x26,
        IsHeightMapCollision = 0x31,
        IsBattle = 0x3A
    }

    public long Get(long blackboard = 0)
    {
        if (blackboard == 0)
        {
            long sonic = GameDocument.GetGameObject("Sonic");
            
            if (sonic == 0)
                return 0;

            blackboard = Blackboard.GetBlackboardFromPlayer(sonic);

            if (blackboard == 0)
                return 0;
        }

        return Blackboard.GetBlackboardContent(blackboard, "BlackboardStatus");
    }

    public bool IsSuper(long blackboardStatus = 0)
    {
        if (blackboardStatus == 0 && (blackboardStatus = Get()) == 0)
            return false;

        return Read<bool>(blackboardStatus + 0x24);
    }

    public bool IsCyberSpace(long blackboardStatus = 0)
    {
        if (blackboardStatus == 0 && (blackboardStatus = Get()) == 0)
            return false;

        return Bitwise.Test(*GetWorldFlags(), (uint)WorldFlags.IsCyberSpace);
    }

    public long* GetFieldPointer(long blackboardStatus = 0, long fieldOffset = 0)
    {
        if (blackboardStatus == 0 && (blackboardStatus = Get()) == 0)
            return null;

        return (long*)new IntPtr(blackboardStatus + fieldOffset).ToPointer();
    }

    public long* GetStateFlags(long blackboardStatus = 0)
    {
        return GetFieldPointer(blackboardStatus, 0x30);
    }

    public long* GetWorldFlags(long blackboardStatus = 0)
    {
        return GetFieldPointer(blackboardStatus, 0x38);
    }
}