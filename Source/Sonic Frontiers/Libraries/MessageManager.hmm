Library "MessageManager" by "Sajid"
{
    #import "GameTypes"

    #lib "Memory"
    #lib "HandleManagerBase"

    using System.Runtime.InteropServices;

    /// <summary>
    /// A struct representation of `hh::fnd::MessageManager`.
    /// </summary>
    [StructLayout(LayoutKind.Explicit, Size = 0x50, Pack = 0x08)]
    public struct Data
    {
        [FieldOffset(0x00)] public ReferencedObject Base;
    }

    /* 0x1525C0FDF */
    private static long _sigMessageManagerSingleton = ScanSignature
    (
        "\x48\x8B\x05\xCC\xCC\xCC\xCC\x48\x89\x43\x20",
        "xxx????xxxx"
    );

    /* 0x1525C0FDF */
    private static long _sigMessageManagerHandleManagerSingleton = ScanSignature
    (
        "\x48\x89\x05\xCC\xCC\xCC\xCC\x48\x89\xF8",
        "xxx????xxx"
    );

    public Data* Get()
    {
        if (_sigMessageManagerSingleton == 0)
            return null;

        return *(Data**)Memory.ReadEffectiveAddress(_sigMessageManagerSingleton);
    }

    public HandleManagerBase.Data* GetHandleManager()
    {
        if (_sigMessageManagerHandleManagerSingleton == 0)
            return null;

        return *(HandleManagerBase.Data**)Memory.ReadEffectiveAddress(_sigMessageManagerHandleManagerSingleton);
    }

    public Messenger* GetMessengerFromHandle(int handle)
    {
        var manager = GetHandleManager();
        
        if (manager == null)
            return null;

        return (Messenger*)manager->GetObject(handle);
    }
}