Library "Messages" by "Hyper, Sajid & ĐeäTh"
{
    #include "Helpers" noemit

    #lib "GameManager"
    #lib "GameService"
    #lib "Memory"
    #lib "Player"
    #lib "StringMapOperation"

    #import "Allocators"

    using System.Runtime.InteropServices;
    using System.Text;

    /* 0x15306BF10 */
    private static long _sigEnqueueMessage = ScanSignature("\x48\x89\x5C\x24\x08\x57\x48\x83\xEC\x20\x48\x63\x41\x38", "xxxxxxxxxxxxxx");
    FUNCTION_PTR(long, fpEnqueueMessage, _sigEnqueueMessage, MessageQueue* in_pMessageQueue, void* in_pMessage)

    /* 0x150880130 */
    private static long _sigSendMessageToGameManager = ScanSignature("\x48\x89\x5C\x24\x08\x48\x89\x74\x24\x10\x57\x48\x83\xEC\x20\x31\xFF\x48\x89\xD6\x48\x89\xCB\x48\x39\xB9\xB8\x01\x00\x00\x76\x28\x48\x8B\x83\xB0\x01\x00\x00\x48\x8B\x0C\xF8\x48\x85\xC9\x74\x0C\x48\x8B\x01\x49\x89\xF0\x48\x89\xDA\xFF\x50\xCC\x48\xFF\xC7\x48\x3B\xBB\xB8\x01\x00\x00\x72\xD8\x83\xBB\xD0\x02\x00\x00\x00\x66", "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx?xxxxxxxxxxxxxxxxxxxx");
    FUNCTION_PTR(void, fpSendMessageToGameManager, _sigSendMessageToGameManager, GameManager.Data* in_pGameManager, void* in_pMessage)

    /* 0x146E60CB0 */
    private static long _sigSendMessageToGameService = ScanSignature("\x48\x89\x5C\x24\x10\x55\x57\x41\x56\x48\x83\xEC\x20\x4C", "xxxxxxxxxxxxxx");
    FUNCTION_PTR(long, fpSendMessageToGameService, _sigSendMessageToGameService, GameService.Data* in_pGameService, void* in_pGameManager, void* in_pMessage)

    /* 0x150128D20 */
    private static long _sigSendMessageToLayer = ScanSignature("\x48\x89\x5C\x24\x18\x55\x48\x83\xEC\x20\x48\x63", "xxxxxxxxxxxx");
    FUNCTION_PTR(long, fpSendMessageToLayer, _sigSendMessageToLayer, GameManager.Data* in_pGameManager, int in_layerIndex, void* in_pMessage)

    /* 0x146E56F10 */
    private static long _sigSendMessageToMessenger = ScanSignature("\x48\x89\x5C\x24\x08\x48\x89\x6C\x24\x10\x48\x89\x74\x24\x18\x57\x48\x83\xEC\x30\x4C\x89\xCF\x41", "xxxxxxxxxxxxxxxxxxxxxxxx");
    FUNCTION_PTR(byte, fpSendMessageToMessenger, _sigSendMessageToMessenger, void* in_pGameObject, void* in_pGameManager, byte a3, void* in_pMessage)

    /* 0x146E5A6A0 */
    private static long _sigSendMessageToPlayer = ScanSignature("\x48\x89\x5C\x24\x18\x56\x57\x41\x56\x48\x83\xEC\x20\x48\x8B\x59", "xxxxxxxxxxxxxxxx");
    FUNCTION_PTR(long, fpSendMessageToPlayer, _sigSendMessageToPlayer, Player.Data* in_pPlayer, void* in_pMessage)

    /// <summary>
    /// A struct representation of `hh::fnd::Message`.
    /// </summary>
    [StructLayout(LayoutKind.Explicit, Size = 0x20)]
    public struct Message
    {
        [FieldOffset(0)]    public long pVftable;

        [FieldOffset(0x08)] public int ID;

        [FieldOffset(0x0C)] public int Sender;

        [FieldOffset(0x10)] public int Receiver;

        [FieldOffset(0x14)] public bool IsBroadcasted;

        [FieldOffset(0x18)] public uint Mask = 0xFFFFFFFF;

        public Message(int in_id)
        {
            ID = in_id;
        }

        VFUNCTION_PTR(Message, 0, Message*, Clone, Message* in_pMessage, IAllocator* in_pAllocator)

        VFUNCTION_PTR(Message, 1, Message*, Dtor, Message* in_pMessage, byte a2)
    }

    /// <summary>
    /// A struct representation of `hh::fnd::MessageQueue`.
    /// </summary>
    [StructLayout(LayoutKind.Explicit, Size = 0x40)]
    public struct MessageQueue { }

    /// <summary>
    /// A struct representation of `app::game::MsgChangePlayerCharacter`.
    /// </summary>
    [StructLayout(LayoutKind.Explicit, Size = 0x50)]
    public struct MsgChangePlayerCharacter
    {
        [FieldOffset(0)]    public Message Base = new Message(0x20C8);

        [FieldOffset(0x20)] public Player.PlayerType PlayerType;

        public MsgChangePlayerCharacter() { }

        public MsgChangePlayerCharacter(Player.PlayerType in_playerType) : this()
        {
            PlayerType = in_playerType;
        }
    }

    /// <summary>
    /// A struct representation of `app::player::MsgHoldOn`.
    /// </summary>
    [StructLayout(LayoutKind.Explicit, Size = 0x58)]
    public struct MsgHoldOn
    {
        [FieldOffset(0)]    public Message Base = new Message(0x21DA);

        [FieldOffset(0x24)] public byte UnkByte1;

        [FieldOffset(0x28)] public int UnkInt1;

        public MsgHoldOn()
        {
            UnkByte1 = 0;
            UnkInt1 = 144;
        }
    }

    /// <summary>
    /// A struct representation of `app::player::MsgHoldRelease`.
    /// </summary>
    [StructLayout(LayoutKind.Explicit, Size = 0x58)]
    public struct MsgHoldRelease
    {
        [FieldOffset(0)]    public Message Base = new Message(0x21DB);

        [FieldOffset(0x20)] public int UnkInt1;

        [FieldOffset(0x50)] public byte UnkByte1;

        public MsgHoldRelease()
        {
            UnkInt1 = 0;
            UnkByte1 = 0;
        }
    }

    /// <summary>
    /// A struct representation of `app::game::MsgResumeWorld`.
    /// </summary>
    [StructLayout(LayoutKind.Explicit, Size = 0x60)]
    public struct MsgResumeWorld
    {
        [FieldOffset(0)]    public Message Base = new Message(0x22CF);

        [FieldOffset(0x20)] public fixed byte Name[16];

        [FieldOffset(0x30)] public bool UnkBool1;

        public MsgResumeWorld()
        {
            /* 0x1414150E0 */
            Base.pVftable = Memory.ReadEffectiveAddress
            (
                /* 0x1402090C0 */
                ScanSignature
                (
                    "\x48\x8D\x05\xCC\xCC\xCC\xCC\x41\xB8\x10\x00\x00\x00\x48\x8D\x15\xCC\xCC\xCC\xCC\x48\x89\x45\xB7\x48\x8D\x4D\xD7\xE8\xCC\xCC\xCC\xCC\x48\x8B\x4E\x30",
                    "xxx????xxxxxxxxx????xxxxxxxxx????xxxx"
                )
            );
        }

        public MsgResumeWorld(string in_name) : this()
        {
            fixed (byte* pName = Name)
            {
                var nameArr = Encoding.UTF8.GetBytes(in_name.Length <= 16 ? in_name : in_name.Substring(0, 16));

                for (int i = 0; i < nameArr.Length; i++)
                    pName[i] = nameArr[i];
            }

            // Set common defaults for unknown values.
            UnkBool1 = true;
        }
    }

    /// <summary>
    /// A struct representation of `app::MsgSpringRoute`.
    /// </summary>
    [StructLayout(LayoutKind.Explicit, Size = 0x58)]
    public struct MsgSpringRoute
    {
        [FieldOffset(0)]    public Message Base = new Message(0x231E);

        [FieldOffset(0x20)] public int Handle;

        [FieldOffset(0x24)] public float Velocity;

        public MsgSpringRoute() { }

        public MsgSpringRoute(GameObject.Data* in_sender, float in_velocity)
        {
            Handle = in_sender->Handle;
            Velocity = in_velocity;
        }
    }

    /// <summary>
    /// A struct representation of `app::camera::MsgStartFreeCamera`.
    /// </summary>
    [StructLayout(LayoutKind.Explicit, Size = 0x50)]
    public struct MsgStartFreeCamera
    {
        [FieldOffset(0)]    public Message Base = new Message(0x2329);

        [FieldOffset(0x20)] public float UnkFloat1;

        public MsgStartFreeCamera()
        {
            UnkFloat1 = 0.4f;
        }
    }

    /// <summary>
    /// A struct representation of `app::game::MsgSuspendWorld`.
    /// </summary>
    [StructLayout(LayoutKind.Explicit, Size = 0x68)]
    public struct MsgSuspendWorld
    {
        [FieldOffset(0)]    public Message Base = new Message(0x2352);

        [FieldOffset(0x20)] public fixed byte Name[16];

        [FieldOffset(0x30)] public uint Flags;

        [FieldOffset(0x34)] public float UnkFloat1;

        [FieldOffset(0x38)] public bool UnkBool1;

        public MsgSuspendWorld()
        {
            /* 0x1414150B0 */
            Base.pVftable = Memory.ReadEffectiveAddress
            (
                /* 0x140208D70 */
                ScanSignature
                (
                    "\x48\x8D\x05\xCC\xCC\xCC\xCC\x41\xB8\x10\x00\x00\x00\xF3\x0F\x11\x45\xEB\x48\x8D\x15\xCC\xCC\xCC\xCC\x48\x89\x45\xB7\x48\x8D\x4D\xD7\x44\x88\x75\xD7",
                    "xxx????xxxxxxxxxxxxxx????xxxxxxxxxxxx"
                )
            );
        }

        public MsgSuspendWorld(string in_name, uint in_flags) : this()
        {
            fixed (byte* pName = Name)
            {
                var nameArr = Encoding.UTF8.GetBytes(in_name.Length <= 16 ? in_name : in_name.Substring(0, 16));

                for (int i = 0; i < nameArr.Length; i++)
                    pName[i] = nameArr[i];
            }

            Flags = in_flags;

            // Set common defaults for unknown values.
            UnkFloat1 = -1.0f;
            UnkBool1 = true;
        }
    }

    /// <summary>
    /// A struct representation of `app::ui::MsgUISetGameCockpitEnabled`.
    /// </summary>
    [StructLayout(LayoutKind.Explicit, Size = 0x58)]
    public struct MsgUISetGameCockpitEnabled
    {
        [FieldOffset(0)]    public Message Base = new Message(0x2406);

        [FieldOffset(0x20)] public ulong Flags;

        [FieldOffset(0x28)] public bool IsEnabled;

        [FieldOffset(0x2C)] public uint Hash;

        public MsgUISetGameCockpitEnabled(string in_name, ulong in_flags, bool in_isEnabled)
        {
            Base.Mask = 0x4000000;
            
            Flags = in_flags;
            IsEnabled = in_isEnabled;
            Hash = StringMapOperation.ComputeHash(in_name);
        }
    }

    public void EnqueueMessage<T>(T in_message) where T : unmanaged
    {
        var pGameManager = GameManager.Get();

        if (pGameManager == null)
            return;

        GET_FUNCTION_PTR(fpEnqueueMessage)(&pGameManager->MessageQueue, &in_message);
    }

    public void SendMessageToGameManager<T>(T in_message) where T : unmanaged
    {
        var pGameManager = GameManager.Get();

        if (pGameManager == null)
            return;

        GET_FUNCTION_PTR(fpSendMessageToGameManager)(pGameManager, &in_message);
    }

    public void SendMessageToGameService<T>(GameService.Data* in_pGameService, T in_message) where T : unmanaged
    {
        if (in_pGameService == null)
            return;

        GET_FUNCTION_PTR(fpSendMessageToGameService)(in_pGameService, in_pGameService->pGameManager, &in_message);
    }

    public void SendMessageToLayer<T>(int in_layerIndex, T in_message) where T : unmanaged
    {
        var pGameManager = GameManager.Get();

        if (pGameManager == null)
            return;

        GET_FUNCTION_PTR(fpSendMessageToLayer)(pGameManager, in_layerIndex, &in_message);
    }

    public void SendMessageToMessenger<T>(void* in_pMessenger, T in_message) where T : unmanaged
    {
        var pGameManager = GameManager.Get();

        if (pGameManager == null)
            return;

        GET_FUNCTION_PTR(fpSendMessageToMessenger)(in_pMessenger, pGameManager, 0, &in_message);
    }

    public void SendMessageToPlayer<T>(T in_message) where T : unmanaged
    {
        var pPlayer = Player.GetPlayerData();

        if (pPlayer == null)
            return;

        GET_FUNCTION_PTR(fpSendMessageToPlayer)(pPlayer, &in_message);
    }
}