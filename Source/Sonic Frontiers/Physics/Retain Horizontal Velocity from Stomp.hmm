Code "Retain Horizontal Velocity from Stomp" by "WasifBoomz" in "Physics" does
/*
While holding down the stomp button, stomp partially retains your last horizontal velocity, rather than falling straight down.

Notes;
- This will remove the cooldown before bounce jumps.
- This will remove the shockwave from performing consecutive stomps.
- This does not affect the shockwave from the "Super Stomp" code.
*/
//
    #lib "Sonic"
    #lib "Time"

    #load "System.Numerics.dll"

    using System.Numerics;

    const float stompStopForce = 20.0f;
    const float stompReleaseStopForce = 80.0f;

    static Vector3 prevVelocity;
//
{
    var kinematics = Player.Kinematics.Get();

    if (kinematics == null)
        return;

    float yVel = kinematics->Velocity.Y;
    bool isStompDown = Player.Input.IsDown(Player.InputActionType.PlayerStomping);

    if (Player.State.GetCurrentStateID<Sonic.StateID>() == Sonic.StateID.StateStompingLand)
    {
        if (isStompDown)
            Player.State.SetState<Sonic.StateID>(Sonic.StateID.StateBounceJump);
        else
            Player.State.SetState<Sonic.StateID>(Sonic.StateID.StateRun);
        kinematics->Velocity = prevVelocity;
        kinematics->Velocity.Y = yVel;
    }

    if (Player.State.GetCurrentStateID<Sonic.StateID>() == Sonic.StateID.StateStompingDown)
    {
        if (new Vector3(prevVelocity.X,0,prevVelocity.Z).Length() < stompStopForce * Time.GetDeltaTime())
            kinematics->Velocity = Vector3.Zero;
        else
            kinematics->Velocity = Vector3.Normalize(new Vector3(prevVelocity.X, 0, prevVelocity.Z)) * (new Vector3(prevVelocity.X, 0, prevVelocity.Z).Length() - ((isStompDown ? stompStopForce : stompReleaseStopForce) * Time.GetDeltaTime()));
        kinematics->Velocity.Y = yVel;
    }

    prevVelocity = kinematics->Velocity;
}
