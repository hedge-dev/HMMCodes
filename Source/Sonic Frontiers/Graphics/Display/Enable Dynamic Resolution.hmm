Patch "Enable Dynamic Resolution" in "Graphics/Display" by "angryzor" does "Re-enables the built-in dynamic resolution system. This system continuously measures your FPS and lowers the game's rendering resolution when it drops below the FPS you configured in the options."
//
    #lib "Memory"
//
{
    /* 0x1410F6F82 in 1.41 */
    long startOfStrings = ScanSignature(
        "\xc7\x44\x24\x48\x3e\x00\x46\x00\x4c\x8b\xc3\xc7\x44\x24\x4c\x72\x00\x61\x00\xc7\x44\x24\x50\x6d\x00\x65\x00\x48\x8d\x44\x24\x48\xc7\x44\x24\x54\x53\x00\x74\x00\xc7\x44\x24\x58\x61\x00\x72\x00\xc7\x44\x24\x5c\x74\x00\x00\x00\xc7\x44\x24\x30\x3e\x00\x46\x00\xc7\x44\x24\x34\x72\x00\x61\x00\xc7\x44\x24\x38\x6d\x00\x65\x00\xc7\x44\x24\x3c\x45\x00\x6e\x00\xc7\x44\x24\x40\x64\x00\x00\x00",
        "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    );

    /* 0x14101BA8E in 1.41 */
    long supportFXFrameStart = ScanSignature(
        "\x48\x8b\x8b\xa0\x24\x00\x00\x33\xd2\x48\x8b\x01\xff\x90\xa8\x00\x00\x00\x84\xc0",
        "xxxxxxxxxxxxxxxxxxxx"
    );

    /* 0x14101C324 in 1.41 */
    long supportFXRenderEnd = ScanSignature(
        "\x48\x8d\x15\x45\x4e\x72\x00\x48\x8b\xc8\x4c\x8b\x00\x41\xff\x90\x18\x03\x00\x00\x49\x8b\xbd\xc8\x24\x00\x00\x49\x8b\x85\xd0\x24\x00\x00\x4c\x8b\xb4\x24\xe0\x02\x00\x00\x4c\x8b\xa4\x24\xe8\x02\x00\x00\x48\x8d\x34\xc7\x48\x3b\xfe",
        "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    );

    /* 0x140240857 in 1.41 */
    long fxParamGraphicsOptionExtensionOnAdd = ScanSignature(
        "\x0f\x28\x05\xf2\xdc\x1f\x01\x0f\x11\x44\x24\x58\xc7\x44\x24\x68\xcd\xcc\xcc\x3d\xc7\x44\x24\x6c\xcd\xcc\xcc\x3d\xc7\x44\x24\x70\xcd\xcc\xcc\x3d\xc6\x44\x24\x74\x00\xc6\x44\x24\x50\x02\xc7\x44\x24\x54\x00\x00\x80\x3f",
        "xxx????xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    );

    /* 0x1402401B3 in 1.41 */
    long fxParamGraphicsOptionExtensionOnReloadSettings = ScanSignature(
        "\x0f\xbe\x0a\x0f\x28\x05\x93\xe3\x1f\x01\xc7\x44\x24\x58\xcd\xcc\xcc\x3d\xc7\x44\x24\x5c\xcd\xcc\xcc\x3d\xc7\x44\x24\x60\xcd\xcc\xcc\x3d\xc6\x44\x24\x64\x00\xc6\x44\x24\x40\x02\x0f\x11\x44\x24\x48\x85\xc9",
        "xxxxxx????xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    );

    long frameStartString = Memory.ReadEffectiveAddress(supportFXFrameStart + 0x38);
    long frameEndString = Memory.ReadEffectiveAddress(supportFXRenderEnd);

    // The game captures GPU profiling info when SetMarker is called in needle with the strings `>FrameStart` and `>FrameEnd`,
    // but by default the strings that SetMarker is called with are instead `>>FrameStart` and `>>FrameEnd`. Fix those.
    Memory.WriteString(frameStartString, ">FrameStart");
    WriteProtected<byte>(frameStartString + 0xB, 0);
    Memory.WriteString(frameEndString, ">FrameEnd");
    WriteProtected<byte>(frameEndString + 0x9, 0);

    // The game completely skips SetMarker logic when a certain pointer in DeviceObjectDX11 is null.
    // This is the case in the release version of the game (presumably debug system there).
    // Skip these checks, but also disable the call to the vfunc in this debug system.
    WriteNop(startOfStrings - 0x4C, 6);
    WriteNop(startOfStrings - 0x16, 15);

    // The graphics options extension of FxParamManager always sets the dynamic resolution option to `FIXED_RESOLUTION`,
    // which overrides the stage's NeedleFxSceneData file. Instead set it to `ENABLE`.
    WriteProtected<byte>(fxParamGraphicsOptionExtensionOnAdd + 0x2D, 1);
    WriteProtected<byte>(fxParamGraphicsOptionExtensionOnReloadSettings + 0x2B, 1);
}
