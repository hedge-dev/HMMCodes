Patch "Force Maximum Geometry Detail" in "Graphics/Quality" by "Hyper" does 
/*
Forces terrain, object and rail geometry to always render at the highest detail.

This does not address pop-in issues.
*/
//
    using System.Runtime.InteropServices;

    static float Range = 10000.0f;

    /* This array is actually 32 in length, but the game
       accesses an array with tons of padding at the start. */
    static float[] LayerRange = new float[36];
//
{
    // Geometry LODs
    IntPtr pLayerRange = Marshal.AllocHGlobal(LayerRange.Length * sizeof(float));
    {
        for (int i = 0; i < LayerRange.Length; i++)
            LayerRange[i] = Range;

        Marshal.Copy(LayerRange, 0, pLayerRange, LayerRange.Length);

        WriteAsmHook
        (
            $@"
                mov rcx, {(long)pLayerRange}

                ; Restore original code.
                movups xmm0, xmmword ptr [rcx + 0x0C]
                lea    rdx, qword ptr [rbp + 0xB0 + 0xFFFFFFFFFFFFFF34]
                movaps xmmword ptr [rbp - 0x20], xmm0
                movups xmm1, xmmword ptr [rcx + 0x1C]
            ",

            /* 0x140EDEAAE */
            ScanSignature
            (
                "\x0F\x10\x41\x0C\x48\x8D\x55\xE4",
                "xxxxxxxx"
            ),

            HookBehavior.Replace
        );
    }

    // Rail LODs
    fixed (float* pRange = &Range)
    {
        /* 0x140B840F1 */
        var trrBlendRangeAddr = ScanSignature
        (
            "\x0F\x10\x00\x48\x8B\xCE\x0F\x11\x43\x0C\xE8",
            "xxxxxxxxxxx"
        );

        // Terrain Material Blending Range
        WriteAsmHook
        (
            $@"
                push   rcx
                mov    rcx, {(long)pRange}
                mov    ecx, dword ptr [rcx]
                mov    dword ptr [rax + 0x0C], ecx
                pop    rcx
                movups xmm0, xmmword ptr [rax]
                mov    rcx, rsi
                movups xmmword ptr [rbx + 0x0C], xmm0
                mov    rax, {((trrBlendRangeAddr + 10) + Read<int>(trrBlendRangeAddr + 11) + 0x05)} ; 0x140B81190
                call   rax
            ",

            trrBlendRangeAddr,

            HookBehavior.Replace
        );

        // Rail LODs
        WriteAsmHook
        (
            $@"
                push rax

                mov   rax, {(long)pRange}
                movss xmm0, dword ptr [rax]
                mulss xmm0, xmm0

                pop rax
            ",

            /* 0x140160930 */
            ScanSignature
            (
                "\x81\xF9\xFF\xFF\xFF\x7F\x74\x1C",
                "xxxxxxxx"
            ),

            HookBehavior.Replace
        );
    }
}


