Code "Time Advancer" in "Time" by "Hyper" does
/*
Allows you to advance time forward or backward using hotkeys at a rate of one in-game hour per second.

Keyboard Layout;
- Page Up/Right Square Bracket - advance time forwards
- Page Down/Left Square Bracket - advance time backwards
*/
//
    #lib "GameManager"
    #lib "Logger"
    #lib "Lua"
    #lib "Time"

    #import "Services"

    using System.Diagnostics;
    using System.Runtime.InteropServices;

    [DllImport("user32.dll")]
    private static extern IntPtr GetForegroundWindow();
    
    static bool _isUpdateTime = false;

    static float _hours = -1.0f;
    static float _minutes = -1.0f;
    static float _rate = 60.0f;

    static bool IsKeyDown(Keys in_keys)
    {
        return (GetAsyncKeyState(in_keys) & 0x8000) != 0;
    }
//
{
    var pTimeService = GameManager.GetService<TimeService>();

    if (pTimeService == null)
        return;
        
    _hours = pTimeService->CurrentTime.Hours;

    if (GetForegroundWindow() != Process.GetCurrentProcess().MainWindowHandle)
        return;

    float delta = Time.GetDeltaTime() * _rate;
    
    if (IsKeyDown(Keys.PageUp) || IsKeyDown(Keys.OemCloseBrackets))
    {
        _minutes += 1.0f * delta;
        _isUpdateTime = true;
    }

    if (IsKeyDown(Keys.PageDown) || IsKeyDown(Keys.OemOpenBrackets))
    {
        _minutes -= 1.0f * delta;
        _isUpdateTime = true;
    }

    if (_minutes > 59.0f)
    {
        _hours += 1.0f;
        _minutes = 0.0f;
    }
    else if (_minutes < 0.0f)
    {
        _hours -= 1.0f;
        _minutes = 59.0f;
    }

    if (_hours > 23.0f)
    {
        _hours = 0.0f;
    }
    else if (_hours < 0.0f)
    {
        _hours = 23.0f;
    }
    
    if (_isUpdateTime)
    {
        Logger.Utility($"[Time Advancer] Current Time: {_hours:00}:{_minutes:00}");

        Lua.SetPrintPreviousError(false);
        Lua.Call("SetTime", _hours, _minutes);
        Lua.SetPrintPreviousError(true);

        _isUpdateTime = false;
    }
}