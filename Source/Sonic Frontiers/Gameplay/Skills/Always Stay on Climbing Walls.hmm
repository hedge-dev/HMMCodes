Code "Always Stay on Climbable Walls" in "Gameplay/Skills" by "WasifBoomz" does "Prevents Sonic and Knuckles from detaching or sliding down climbable walls when hitting other walls and ceilings."
//
    #lib "Player"
    #lib "Time"

    #load "System.Numerics.dll"

    using System.Numerics;

    const float fallOffWallTime = 0.3f;

    static Vector3 previousPosition;
    static float currentFallOffTime;
//
{
    var kinematics = Player.Kinematics.Get();
    if (kinematics == null)
        return;

    currentFallOffTime -= Time.GetDeltaTime();
    
    switch (Player.GetPlayerType())
    {
        case Player.PlayerType.Sonic:
        {
            if (Player.State.GetCurrentStateID<Sonic.StateID>() == Sonic.StateID.StateWallLeave)
                Player.State.SetState<Sonic.StateID>(Sonic.StateID.StateJump);
            else if (Player.State.GetCurrentStateID<Sonic.StateID>() == Sonic.StateID.StateWallSlideDown)
                Player.State.SetState<Sonic.StateID>(Sonic.StateID.StateFall);
            else
                break;
            currentFallOffTime = fallOffWallTime;
            break;
        }

        case Player.PlayerType.Knuckles:
        {
            if (Player.State.GetCurrentStateID<Knuckles.StateID>() == Knuckles.StateID.StateWallLeave)
                Player.State.SetState<Knuckles.StateID>(Knuckles.StateID.StateJump);
            else if (Player.State.GetCurrentStateID<Knuckles.StateID>() == Knuckles.StateID.StateWallSlideDown)
                Player.State.SetState<Knuckles.StateID>(Knuckles.StateID.StateFall);
            else
                break;
            currentFallOffTime = fallOffWallTime;
            break;
        }
    }

    if (currentFallOffTime + Time.GetDeltaTime() == fallOffWallTime)
        kinematics->Position = previousPosition;

    if (currentFallOffTime > 0)
        kinematics->Velocity = Vector3.Zero;
    else
        previousPosition = kinematics->Position;
}
