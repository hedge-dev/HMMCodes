Code "Super Stomp" in "Gameplay" by "Hyper & Yosho" does
/*
Sends a powerful shockwave when landing a stomp from a great height.

Idea by Yosho.
*/
//
    #include "Reflection" noemit

    #lib "MathHelpers"
    #lib "Player"
    #lib "Reflection"
    #lib "SonicParameters"

    #import "States"

    #load "System.Numerics.dll"

    using System.Numerics;

    static bool _isStompBeginPositionPreserved = false;

    static Vector3 _stompBeginPosition;

    static float _heightFallen = 0.0f;
    static float _heightThreshold = 15.0f;
    static float _radius = 11.0f;
//
{
    Sonic.StateID NotifySuperStompLand(Sonic.StateID in_stateId, Sonic.StateID[] in_stateStackTrace)
    {
        if (in_stateId == Sonic.StateID.StateStompingLand)
        {
            if (_heightFallen >= _heightThreshold)
                Player.State.AddStateParameter<StateStompingLandParameter>(new StateStompingLandParameter(3));
        }

        return in_stateId;
    }

    Player.State.AddStateNotifyAction<Sonic.StateID>(NotifySuperStompLand);

    var kinematics = Player.Kinematics.Get();

    if (kinematics == null)
        return;

    if (Player.State.GetCurrentStateID<Sonic.StateID>() == Sonic.StateID.StateStompingDown)
    {
        if (!_isStompBeginPositionPreserved)
        {
            _stompBeginPosition = kinematics->Position;

            _isStompBeginPositionPreserved = true;
        }
        
        _heightFallen = _stompBeginPosition.Y - kinematics->Position.Y;

        // 11.0f is the default value for boundStompingCollisionScale.
        _radius = MathHelpers.Clamp(_heightFallen - _heightThreshold, 11.0f, 33.0f);

        var SonicParametersInfo = Reflection.GetDataInfo<SonicParameters.Root>("player_common");

        if (SonicParametersInfo.pData == null)
            return;
        
        RFL_SET_CONTEXTUAL_PLAYER_PARAM(SonicParametersInfo, modePackage.stomping.boundStompingCollisionScale, _radius);
    }
    else
    {
        _isStompBeginPositionPreserved = false;

        _heightFallen = 0.0f;
    }
}