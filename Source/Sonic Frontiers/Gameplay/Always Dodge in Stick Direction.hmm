Code "Always Dodge in Stick Direction" in "Gameplay" by "Hyper" does
/*
Allows the player to dodge in the direction of the analog stick.

When the analog stick is neutral, the player will dodge in the default left and right directions relative to the camera plane.
*/
//
    #lib "Player"
    #lib "XInput"

    #import "States"

    static bool _isInitialised = false;
    static bool _isRightShoulderDown = false;
//
{
    if (!_isInitialised)
    {
        WriteNop
        (
            /* 0x1409CDD9D */
            ScanSignature
            (
                "\xE8\xCC\xCC\xCC\xCC\xBA\x8C\x00\x00\x00\xE9\x1D\x01\x00\x00",
                "x????xxxxxxxxxx"
            ),

            5
        );

        WriteNop
        (
            /* 0x1409D0509 */
            ScanSignature
            (
                "\xE8\xCC\xCC\xCC\xCC\xBA\x8C\x00\x00\x00\xE9\x0E\x01\x00\x00",
                "x????xxxxxxxxxx"
            ),

            5
        );

        Sonic.StateID NotifyStateAvoid(Sonic.StateID in_stateId, Sonic.StateID[] in_stateStackTrace)
        {
            if (in_stateId == Sonic.StateID.StateAvoid && XInput.IsAnalogNeutral(0))
            {
                var dir = StateAvoidParameter.GetDirectionRelativeToCameraPlane(_isRightShoulderDown);

                Player.State.AddStateParameter<StateAvoidParameter>(new StateAvoidParameter(dir));
            }

            return in_stateId;
        }

        Player.State.AddStateNotifyAction<Sonic.StateID>(NotifyStateAvoid);

        _isInitialised = true;
    }

    _isRightShoulderDown = Player.Input.IsDown(Player.InputActionType.PlayerRightStep);
}