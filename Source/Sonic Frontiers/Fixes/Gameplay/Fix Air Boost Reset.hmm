Code "Fix Air Boost Reset" in "Fixes/Gameplay" by "Hyper" does "Allows Sonic to perform another Air Boost after previously using it before performing a homing attack, stomp, or using a spring." 
//
    #include "BlackboardStatus" noemit

    #lib "Bitwise"
    #lib "BlackboardStatus"
    #lib "Player"

    using System.Collections.Generic;

    static List<Sonic.StateID> AllowedStates = new()
    {
        Sonic.StateID.StateStompingFlip,
        Sonic.StateID.StateStompingBounce,
        Sonic.StateID.StateHomingFinished,
        Sonic.StateID.StateSpringJump
    }

    static List<Sonic.StateID> DisallowedStates = new()
    {
        Sonic.StateID.StateAirBoost,
        Sonic.StateID.StateAuraTrain,
        Sonic.StateID.StateCaught,
        Sonic.StateID.StateHoldStand,
        Sonic.StateID.StateSpinBoost
    }

    static bool _isInitialised = false;
    static bool _isRestoredAirBoost = false;
//
{
    if (!_isInitialised)
    {
        Sonic.StateID NotifyAirBoostReset(Sonic.StateID in_stateId, Sonic.StateID[] in_stateStackTrace)
        {
            // Reset flag for StateAirBoost or StateSpinBoost.
            if (DisallowedStates.Contains(in_stateId) || (AllowedStates.Contains(in_stateStackTrace[0]) && in_stateStackTrace[0] != Sonic.StateID.StateSpringJump))
            {
                _isRestoredAirBoost = false;
                return in_stateId;
            }

            foreach (var state in AllowedStates)
            {
                if (state == in_stateId)
                    _isRestoredAirBoost = true;
            }

            return in_stateId;
        }

        Player.State.AddStateNotifyAction<Sonic.StateID>(NotifyAirBoostReset);

        _isInitialised = true;
    }

    // Disable restored air boost for Super Sonic.
    if (BlackboardStatus.IsSuper())
        _isRestoredAirBoost = false;

    // Disable restored air boost for diving.
    if (IS_STATE_FLAG(IsDiving))
        _isRestoredAirBoost = false;

    if (Player.Input.IsPressed(Player.InputActionType.PlayerBoost) && !Player.Status.IsGroundedSpecial() && _isRestoredAirBoost)
    {
        Player.State.SetState<Sonic.StateID>(Sonic.StateID.StateAirBoost);
    }
}