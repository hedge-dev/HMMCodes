Library "GOComponents" by "Hyper"
{
    #include "Helpers" noemit

    #lib "GameObject"
    #lib "Helpers"
    #lib "Memory"

    #import "Collections"
    #import "Player"
    #import "Plugins"
    #import "States"

    #load "System.Numerics.dll"
    
    using System.Numerics;
    using System.Runtime.InteropServices;

    /// <summary>
    /// A struct representation of `hh::game::GOComponent`.
    /// </summary>
    [StructLayout(LayoutKind.Explicit, Size = 0x80)]
    public struct GOComponent
    {
        /// <summary>
        /// A pointer to an instance of `hh::game::GameObject` acting as the parent of this component.
        /// </summary>
        [FieldOffset(0x20)] public GameObject.Data* pParent;

        /// <summary>
        /// A pointer to an instance of `GOComponentStaticClass`.
        /// </summary>
        [FieldOffset(0x38)] public GOComponentStaticClass* pStaticClass;
    }

    /// <summary>
    /// A struct representation of the static class for storing information about a game object component.
    /// </summary>
    [StructLayout(LayoutKind.Explicit, Size = 0x18)]
    public struct GOComponentStaticClass
    {
        /// <summary>
        /// The name of this game object component.
        /// </summary>
        [FieldOffset(0)] public Helpers.UnmanagedString Name;

        public override string ToString() => Name.ToString();
    }

    [StructLayout(LayoutKind.Explicit, Size = 0x90)]
    public struct GOCCamera
    {
        [FieldOffset(0)] public GOComponent Base;
    }

    [StructLayout(LayoutKind.Explicit, Size = 0x140)]
    public struct GOCPlayerHsm
    {
        [FieldOffset(0)]     public GOComponent Base;

        [FieldOffset(0x78)]  public int CurrentStateID;

        [FieldOffset(0x90)]  public PlayerContext* pPlayerContext;

        [FieldOffset(0xC8)]  public void* pPlayerStateParameter;

        [FieldOffset(0xD0)]  public StatePluginManager* pStatePluginManager;

        [FieldOffset(0xEC)]  public int DestinationStateID;

        [FieldOffset(0xF4)]  public byte StateFlags;

        [FieldOffset(0x120)] public MoveArray<StateDesc> States;
    }

    [StructLayout(LayoutKind.Explicit, Size = 0x240, Pack = 0x20)]
    public struct GOCTransform
    {
        [FieldOffset(0xC0)] public Vector3 Position;
    }
}